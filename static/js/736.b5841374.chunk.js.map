{"version":3,"file":"static/js/736.b5841374.chunk.js","mappings":"0SAEaA,EAAgBC,EAAAA,GAAAA,IAAH,0FAMbC,EAAYD,EAAAA,GAAAA,IAAH,qJASTE,EAAYF,EAAAA,GAAAA,GAAH,+CAITG,EAAaH,EAAAA,GAAAA,IAAH,+HAQVI,EAAYJ,EAAAA,GAAAA,EAAH,6C,mBCjBhBK,EAAa,IAAIC,EAAAA,EAKVC,EAAO,WAClB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGACGT,EAAWU,oBAAoBP,GADlC,QACVQ,EADU,SAEJA,EAAKC,MACfL,EAAYI,EAAKC,MAHH,2CAAH,qDAOfH,GACD,GAAE,CAACN,KAGF,4BACE,wBAAI,UACJ,SAACT,EAAD,UACGY,EAASO,KAAI,SAAAC,GAAK,OACjB,UAAClB,EAAD,YACE,SAACC,EAAD,UAAYiB,EAAMC,QAClB,SAACjB,EAAD,CACEkB,IACEF,EAAMG,aAAN,8CAC2CH,EAAMG,cA3B/D,4DA8BYC,IAAKJ,EAAMC,QAEb,UAAChB,EAAD,WAAW,SAAOe,EAAMK,eAVVL,EAAMM,GADL,QAiB1B,EAED,G","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const ActorCard = styled.div`\n  width: 200px;\n  margin: 10px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  text-align: center;\n`;\n\nexport const ActorName = styled.h3`\n  margin-bottom: 5px;\n`;\n\nexport const ActorImage = styled.img`\n  width: 150px;\n  height: 225px;\n  object-fit: cover;\n  border-radius: 4px;\n  margin-bottom: 5px;\n`;\n\nexport const ActorRole = styled.p`\n  margin-bottom: 0;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  CastContainer,\n  ActorCard,\n  ActorName,\n  ActorImage,\n  ActorRole,\n} from './Cast.styled';\n\nimport ApiService from '../../apiservice/ApiService';\n\nconst apiService = new ApiService();\n\nconst defaultImage =\n  'https://ternatekota.go.id/images/pimpinan-opd/default.png';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [castData, setCastData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await apiService.getCastForMovieById(movieId);\n      if (data && data.cast) {\n        setCastData(data.cast);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <CastContainer>\n        {castData.map(actor => (\n          <ActorCard key={actor.id}>\n            <ActorName>{actor.name}</ActorName>\n            <ActorImage\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/original/${actor.profile_path}`\n                  : defaultImage\n              }\n              alt={actor.name}\n            />\n            <ActorRole>Role: {actor.character}</ActorRole>\n          </ActorCard>\n        ))}\n      </CastContainer>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["CastContainer","styled","ActorCard","ActorName","ActorImage","ActorRole","apiService","ApiService","Cast","movieId","useParams","useState","castData","setCastData","useEffect","fetchData","getCastForMovieById","data","cast","map","actor","name","src","profile_path","alt","character","id"],"sourceRoot":""}