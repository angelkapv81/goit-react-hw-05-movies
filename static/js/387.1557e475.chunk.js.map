{"version":3,"file":"static/js/387.1557e475.chunk.js","mappings":"qTAEaA,EAAyBC,EAAAA,GAAAA,IAAH,6CAItBC,EAAqBD,EAAAA,GAAAA,GAAH,gDAIlBE,EAAmBF,EAAAA,GAAAA,EAAH,+CAIhBG,EAAUH,EAAAA,GAAAA,IAAH,8H,mBCFdI,EAAa,IAAIC,EAAAA,EAQVC,EAAU,WACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,oGACAT,EAAWU,gBAAgBP,GAD3B,QACbQ,EADa,SAEPA,EAAKC,SACfL,EAAWI,EAAKC,SAHC,2CAAH,qDAOlBH,GACD,GAAE,CAACN,KAGF,UAACR,EAAD,YACE,SAACE,EAAD,UAAoB,kBACA,IAAnBS,EAAQO,QACP,SAACf,EAAD,UAAkB,2CAIlBQ,EAAQQ,KAAI,SAAAC,GAAM,OAChB,4BACE,0BACE,uBAAG,aACFA,EAAOC,WAEV,SAACjB,EAAD,WACE,SAAC,IAAD,UAAgBgB,EAAOE,aAEzB,0BACE,uBAAG,aACFF,EAAOG,eAAeC,WAEzB,0BACE,uBAAG,kBA3CEC,EA4COL,EAAOM,WA1ClB,IAAIC,KAAKF,GACVG,mBAAmB,QAFf,CAAEC,KAAM,UAAWC,MAAO,OAAQC,IAAK,iBA6C7C,oBAhBQX,EAAOY,IA9BR,IAAAP,CA6BO,MAuBzB,EAED,G","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieOverviewContainer = styled.div`\n  margin-top: 20px;\n`;\n\nexport const MovieOverviewTitle = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const NoReviewsMessage = styled.p`\n  font-style: italic;\n`;\n\nexport const Content = styled.div`\n  border-left: 2px solid grey;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin-right: 15px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nimport { useParams } from 'react-router-dom';\nimport {\n  MovieOverviewContainer,\n  MovieOverviewTitle,\n  NoReviewsMessage,\n  Content,\n} from './Reviews.styled';\nimport ApiService from '../../apiservice/ApiService';\n\nconst apiService = new ApiService();\n\nconst formatDate = dateString => {\n  const options = { year: 'numeric', month: 'long', day: 'numeric' };\n  const date = new Date(dateString);\n  return date.toLocaleDateString('en-US', options);\n};\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      const data = await apiService.getMovieReviews(movieId);\n      if (data && data.results) {\n        setReviews(data.results);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <MovieOverviewContainer>\n      <MovieOverviewTitle>Movie Reviews</MovieOverviewTitle>\n      {reviews.length === 0 ? (\n        <NoReviewsMessage>\n          You don't have any reviews on the film\n        </NoReviewsMessage>\n      ) : (\n        reviews.map(review => (\n          <div key={review.id}>\n            <p>\n              <b>Author: </b>\n              {review.author}\n            </p>\n            <Content>\n              <ReactMarkdown>{review.content}</ReactMarkdown>\n            </Content>\n            <p>\n              <b>Rating: </b>\n              {review.author_details.rating}\n            </p>\n            <p>\n              <b>Created At: </b>\n              {formatDate(review.created_at)}\n            </p>\n            <hr />\n          </div>\n        ))\n      )}\n    </MovieOverviewContainer>\n  );\n};\n\nexport default Reviews;\n"],"names":["MovieOverviewContainer","styled","MovieOverviewTitle","NoReviewsMessage","Content","apiService","ApiService","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","getMovieReviews","data","results","length","map","review","author","content","author_details","rating","dateString","created_at","Date","toLocaleDateString","year","month","day","id"],"sourceRoot":""}